当出现进度延期风险时，通过分阶段提测，每日站立会沟通的方式追赶上了进度。上线前接近春节，为控制风险，将发版放到了春节后。
进度控制，原来做该功能开发同学忙于试物所，无法抽身，为达到目标上线时间，抽调了其他开发同学做支持。数据迁移做了多次迁移演练以降低风险，分阶段发布以控制风险。
腾讯视频号系统刚上线，有不少bug。下游系统OC、OTP都在开发中，联调的过程中比较缓慢，为追赶进度，每天早上内部团队晨会，每天下班前外部团队沟通会，临近上线，邀请了外部团队来公司联调。
前端时间有比较大的压力，之前前端的开发任务大多没有做详细拆解，在这个需求中做了详细拆解，开发的过程中每天过开发的进度，测试阶段每天过测试进度。
为了解决新旧BPG数据不一致的风险，新增了数据校验功能，新增了灰度控制功能。
在身份证照片隐私上，讨论了多轮，采用了阿里云私有oss存储身份证照片，在阿里云私有oss不能满足访问时间要求时，自己做了一层图片代理接口。
和订单界面优化需求有依赖关系，要求开发基于订单界面优化进行开发，避免代码产生较大的冲突。
项目合并了几个需求导致过大，拆分需求不同版本上线。
旧数据迁移的量大，数据表多 提前在生产做了数据迁移预演，
存在和第三方系统对接的场景，如迁移原来的助力活动数据，助力数据等，需要种草哪边同步安排人员对接。
涉及到多个表数据的数据迁移，种草的经费不足需要自研研究原来的表结构和表之间的关系，迁移旧的数据，
依赖cms的接口和mq,提前和cms对齐开发计划。2.上线后 提供试用报告和话题贴快照表，供 cms迁移旧内容数据时参考比对。
按照测试方案整体跑优选的结果会影响系统性能，且代码改造量大，调整为区块店、中心店单独跑出结果，由BI按照指定业务规则分析数据。
提测前每天晨会过进度和问题，问题不过夜。
区块店门店数量较多，做好性能预案。
开发基本都是新人，概要设计更细化，每天晨会跟进进度和答疑，及时调整逻辑和工作量。
前端新人对逻辑不熟悉，细化概设，开发前讲解做的内容，避免理解不一致。
测试时间比较紧，对于不依赖的页面，分阶段提测。
整个项目周期比较长，里程碑计划可以划分更细，必须要做用例评审、代码评审、冒烟通过率达到100%后可正常提测。
整个项目涉及到人员多，团队多，上线流程长，制定详细上线流程
流程节点发生一个小错误都会导致全线回退，制定详细灾备方案，推动阿里云做兼容
产品新人，对业务不是很清晰，在设计过程中尽可能细化流程点
当功能涉及到小程序与app，并且非主流程时，尽可能采用H5做通用处理
业务方，产品，项目经理，开发等人员变更风险，记录好内容，SA主导重新灌输业务
人员时间资源风险，持续穿插开发替换集中式瀑布流，空闲一个人就处理一个功能
项目合并了几个需求导致过大，拆分需求不同版本上线。
存储介质基于单一search，能力偏弱，设计上面向后面大增量数据存储时做预留拓展
与核心业务拆分




